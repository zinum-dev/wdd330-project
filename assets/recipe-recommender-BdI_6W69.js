const c="aa4e1f66790e47f69ee4f7e61e916a2f",o={cold:{minCalories:500,maxCalories:1200,minFat:20},mild:{minCalories:300,maxCalories:800},hot:{minCalories:150,maxCalories:600,maxFat:20}};async function l(r){const i="https://api.spoonacular.com/recipes/complexSearch",a={apiKey:c,addRecipeInformation:!0,instructionsRequired:!0,number:9,...r},n=new URLSearchParams;for(const e in a)a[e]!==void 0&&n.append(e,a[e]);const s=`${i}?${n.toString()}`;try{return(await(await fetch(s)).json()).results}catch(e){return console.error("Error fetching recipes from Spoonacular:",e),[]}}async function m(r){let i;r<10?i=o.cold:r>=10&&r<20?i=o.mild:i=o.hot;const a={query:i.query,minCalories:i.minCalories,maxCalories:i.maxCalories,minFat:i.minFat,maxFat:i.maxFat},n=await l(a);return!n||n.length===0?[]:n.sort(()=>.5-Math.random()).slice(0,3).map(e=>({id:e.id,name:e.title,description:`Ready in ${e.readyInMinutes} minutes. Servings: ${e.servings}.`,imageUrl:e.image,sourceUrl:e.sourceUrl}))}async function u(r,i){let a;i<15?a=o.cold:r>=20?a=o.hot:a=o.mild;const n={query:a.query,minCalories:a.minCalories,maxCalories:a.maxCalories,minFat:a.minFat,maxFat:a.maxFat,number:5},s=await l(n);if(!s||s.length===0)return null;const e=Math.floor(Math.random()*s.length),t=s[e];return{id:t.id,name:t.title,description:`Ready in ${t.readyInMinutes} minutes. Servings: ${t.servings}.`,imageUrl:t.image,sourceUrl:t.sourceUrl}}export{u as a,m as g};
